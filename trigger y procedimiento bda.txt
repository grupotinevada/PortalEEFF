-- PROCEDIMIENTO ALMACENADO PARA GENERAR ESTADO FINANCIERO COMPARATIVO
DELIMITER $$

CREATE PROCEDURE sp_estado_financiero_comparativo5(
    IN p_id_empresa VARCHAR(10),
    IN p_año_base INT,
    IN p_año_comparacion INT
)
BEGIN
    DECLARE v_count_base INT DEFAULT 0;
    DECLARE v_count_comp INT DEFAULT 0;

    SELECT COUNT(*) INTO v_count_base
    FROM balance b
    WHERE b.id_empresa = p_id_empresa 
    AND YEAR(b.fecha_procesado) = p_año_base;

    SELECT COUNT(*) INTO v_count_comp
    FROM balance b
    WHERE b.id_empresa = p_id_empresa 
    AND YEAR(b.fecha_procesado) = p_año_comparacion;

    IF v_count_base = 0 AND v_count_comp = 0 THEN
        SELECT 'ERROR: No se encontraron datos para ninguno de los años especificados' AS mensaje;
    ELSE
        -- Generar el estado financiero comparativo
        WITH datos_base AS (
            -- ACTIVOS CORRIENTES AÑO BASE
            SELECT 
                1 as orden_seccion,
                'ACTIVOS CORRIENTES' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 1 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL ACTIVOS CORRIENTES AÑO BASE
            SELECT 
                1 as orden_seccion,
                'ACTIVOS CORRIENTES' as seccion,
                'TOTAL-1' as id_fsa,
                'Total activos corrientes' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 1 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            
            UNION ALL
            
            -- ACTIVOS NO CORRIENTES AÑO BASE
            SELECT 
                2 as orden_seccion,
                'ACTIVOS NO CORRIENTES' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 2 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL ACTIVOS NO CORRIENTES AÑO BASE
            SELECT 
                2 as orden_seccion,
                'ACTIVOS NO CORRIENTES' as seccion,
                'TOTAL-2' as id_fsa,
                'Total activos no corrientes' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 2 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            
            UNION ALL
            
            -- TOTAL ACTIVOS AÑO BASE
            SELECT 
                3 as orden_seccion,
                'TOTAL ACTIVOS' as seccion,
                'TOTAL-ACTIVOS' as id_fsa,
                'TOTAL ACTIVOS' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate IN (1, 2) 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            
            UNION ALL
            
            -- PASIVOS CORRIENTES AÑO BASE
            SELECT 
                4 as orden_seccion,
                'PASIVOS CORRIENTES' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 3 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL PASIVOS CORRIENTES AÑO BASE
            SELECT 
                4 as orden_seccion,
                'PASIVOS CORRIENTES' as seccion,
                'TOTAL-3' as id_fsa,
                'Total pasivos corrientes' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 3 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            
            UNION ALL
            
            -- PASIVOS NO CORRIENTES AÑO BASE
            SELECT 
                5 as orden_seccion,
                'PASIVOS NO CORRIENTES' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 4 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL PASIVOS NO CORRIENTES AÑO BASE
            SELECT 
                5 as orden_seccion,
                'PASIVOS NO CORRIENTES' as seccion,
                'TOTAL-4' as id_fsa,
                'Total pasivos no corrientes' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 4 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            
            UNION ALL
            
            -- TOTAL PASIVOS AÑO BASE
            SELECT 
                6 as orden_seccion,
                'TOTAL PASIVOS' as seccion,
                'TOTAL-PASIVOS' as id_fsa,
                'TOTAL PASIVOS' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate IN (3, 4) 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            
            UNION ALL
            
            -- PATRIMONIO AÑO BASE
            SELECT 
                7 as orden_seccion,
                'PATRIMONIO' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 5 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL PATRIMONIO AÑO BASE
            SELECT 
                7 as orden_seccion,
                'PATRIMONIO' as seccion,
                'TOTAL-5' as id_fsa,
                'TOTAL PATRIMONIO' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 5 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            
            UNION ALL
            
            -- TOTAL PASIVO + PATRIMONIO AÑO BASE
            SELECT 
                8 as orden_seccion,
                'TOTAL PASIVO + PATRIMONIO' as seccion,
                'TOTAL-PAS-PAT' as id_fsa,
                'TOTAL PASIVO + PATRIMONIO' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate IN (3, 4, 5) 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            
            UNION ALL
            
            -- GANANCIAS Y PÉRDIDAS AÑO BASE
            SELECT 
                9 as orden_seccion,
                'GANANCIAS Y PÉRDIDAS' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 6 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_base
            GROUP BY f.id_fsa, f.desc
        ),
        
        datos_comparacion AS (
            -- ACTIVOS CORRIENTES AÑO COMPARACIÓN
            SELECT 
                1 as orden_seccion,
                'ACTIVOS CORRIENTES' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 1 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL ACTIVOS CORRIENTES AÑO COMPARACIÓN
            SELECT 
                1 as orden_seccion,
                'ACTIVOS CORRIENTES' as seccion,
                'TOTAL-1' as id_fsa,
                'Total activos corrientes' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 1 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            
            UNION ALL
            
            -- ACTIVOS NO CORRIENTES AÑO COMPARACIÓN
            SELECT 
                2 as orden_seccion,
                'ACTIVOS NO CORRIENTES' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 2 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL ACTIVOS NO CORRIENTES AÑO COMPARACIÓN
            SELECT 
                2 as orden_seccion,
                'ACTIVOS NO CORRIENTES' as seccion,
                'TOTAL-2' as id_fsa,
                'Total activos no corrientes' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 2 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            
            UNION ALL
            
            -- TOTAL ACTIVOS AÑO COMPARACIÓN
            SELECT 
                3 as orden_seccion,
                'TOTAL ACTIVOS' as seccion,
                'TOTAL-ACTIVOS' as id_fsa,
                'TOTAL ACTIVOS' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate IN (1, 2) 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            
            UNION ALL
            
            -- PASIVOS CORRIENTES AÑO COMPARACIÓN
            SELECT 
                4 as orden_seccion,
                'PASIVOS CORRIENTES' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 3 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL PASIVOS CORRIENTES AÑO COMPARACIÓN
            SELECT 
                4 as orden_seccion,
                'PASIVOS CORRIENTES' as seccion,
                'TOTAL-3' as id_fsa,
                'Total pasivos corrientes' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 3 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            
            UNION ALL
            
            -- PASIVOS NO CORRIENTES AÑO COMPARACIÓN
            SELECT 
                5 as orden_seccion,
                'PASIVOS NO CORRIENTES' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 4 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL PASIVOS NO CORRIENTES AÑO COMPARACIÓN
            SELECT 
                5 as orden_seccion,
                'PASIVOS NO CORRIENTES' as seccion,
                'TOTAL-4' as id_fsa,
                'Total pasivos no corrientes' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 4 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            
            UNION ALL
            
            -- TOTAL PASIVOS AÑO COMPARACIÓN
            SELECT 
                6 as orden_seccion,
                'TOTAL PASIVOS' as seccion,
                'TOTAL-PASIVOS' as id_fsa,
                'TOTAL PASIVOS' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate IN (3, 4) 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            
            UNION ALL
            
            -- PATRIMONIO AÑO COMPARACIÓN
            SELECT 
                7 as orden_seccion,
                'PATRIMONIO' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 5 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            GROUP BY f.id_fsa, f.desc
            
            UNION ALL
            
            -- TOTAL PATRIMONIO AÑO COMPARACIÓN
            SELECT 
                7 as orden_seccion,
                'PATRIMONIO' as seccion,
                'TOTAL-5' as id_fsa,
                'TOTAL PATRIMONIO' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 5 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            
            UNION ALL
            
            -- TOTAL PASIVO + PATRIMONIO AÑO COMPARACIÓN
            SELECT 
                8 as orden_seccion,
                'TOTAL PASIVO + PATRIMONIO' as seccion,
                'TOTAL-PAS-PAT' as id_fsa,
                'TOTAL PASIVO + PATRIMONIO' as descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate IN (3, 4, 5) 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            
            UNION ALL
            
            -- GANANCIAS Y PÉRDIDAS AÑO COMPARACIÓN
            SELECT 
                9 as orden_seccion,
                'GANANCIAS Y PÉRDIDAS' as seccion,
                f.id_fsa,
                f.desc AS descripcion,
                SUM(b.saldo) AS monto
            FROM balance b
            INNER JOIN cta_fsa_mapping cfm ON b.id_blce = cfm.id_blce AND b.id_empresa = cfm.id_empresa
            INNER JOIN fsa f ON cfm.id_fsa = f.id_fsa
            INNER JOIN categoria c ON f.id_cate = c.id_cate
            WHERE c.id_cate = 6 
            AND b.id_empresa = p_id_empresa
            AND YEAR(b.fecha_procesado) = p_año_comparacion
            GROUP BY f.id_fsa, f.desc
        ),
        
        -- Unión de todas las posibles líneas de ambos años
        todas_lineas AS (
            SELECT DISTINCT orden_seccion, seccion, id_fsa, descripcion FROM datos_base
            UNION
            SELECT DISTINCT orden_seccion, seccion, id_fsa, descripcion FROM datos_comparacion
        ),
        
   resultado_final AS (
            SELECT 
                tl.orden_seccion,
                tl.seccion,
                tl.id_fsa,
                tl.descripcion,
                COALESCE(db.monto, 0) AS monto_base,
                COALESCE(dc.monto, 0) AS monto_comparacion,
                COALESCE(dc.monto, 0) - COALESCE(db.monto, 0) AS variacion_absoluta,
                CASE 
                    WHEN COALESCE(db.monto, 0) = 0 AND COALESCE(dc.monto, 0) = 0 THEN 0
                    WHEN COALESCE(db.monto, 0) = 0 THEN 100
                    ELSE ROUND(((COALESCE(dc.monto, 0) - COALESCE(db.monto, 0)) / ABS(COALESCE(db.monto, 0))) * 100, 2)
                END AS variacion_porcentual
            FROM todas_lineas tl
            LEFT JOIN datos_base db 
              ON tl.orden_seccion = db.orden_seccion 
              AND tl.seccion = db.seccion
              AND tl.id_fsa = db.id_fsa
              AND tl.descripcion = db.descripcion
            LEFT JOIN datos_comparacion dc 
              ON tl.orden_seccion = dc.orden_seccion 
              AND tl.seccion = dc.seccion
              AND tl.id_fsa = dc.id_fsa
              AND tl.descripcion = dc.descripcion
        )

        SELECT 
            p_id_empresa AS empresa,
            p_año_base AS año_1,
            p_año_comparacion AS año_2,
            CASE 
                WHEN descripcion LIKE 'Total%' OR descripcion LIKE 'TOTAL%' THEN 
                    CONCAT('    ', descripcion)
                ELSE 
                    CONCAT('        ', descripcion)
            END AS concepto,
            FORMAT(monto_base, 0) AS monto_año_1,
            FORMAT(monto_comparacion, 0) AS monto_año_2,
            FORMAT(variacion_absoluta, 0) AS variacion_en_pesos,
            CONCAT(variacion_porcentual, '%') AS variacion_porcentual,
            monto_base AS monto_año_1_num,
            monto_comparacion AS monto_año_2_num,
            variacion_absoluta AS variacion_en_pesos_num,
            variacion_porcentual AS variacion_porcentual_num
        FROM resultado_final
        ORDER BY 
            orden_seccion,
            CASE 
                WHEN id_fsa LIKE 'TOTAL%' THEN 'ZZZZ'
                ELSE id_fsa 
            END;
    END IF;
END$$

DELIMITER ;


call sp_estado_financiero_comparativo5('CV19', 2024, 2025)


-- TRIGGER PARA EL MAPEO AUTOMATICO SI SE SUBEN BALANCES
DELIMITER $$

CREATE TRIGGER trg_after_insert_balance
AFTER INSERT ON balance
FOR EACH ROW
BEGIN
  DECLARE mapped_fsa VARCHAR(20);
  DECLARE last_fsa_num INT;
  DECLARE new_fsa_code VARCHAR(20);
  DECLARE exists_fsa INT;

  -- Buscar si la cuenta de la empresa ya está mapeada (evitar duplicación)
  SELECT COUNT(*) INTO exists_fsa
  FROM cta_fsa_mapping
  WHERE id_blce = NEW.id_blce AND id_empresa = NEW.id_empresa;

  IF exists_fsa = 0 THEN
    -- Intentar obtener desde default mapping
    SELECT id_fsa INTO mapped_fsa
    FROM default_cta_fsa_mapping
    WHERE num_cuenta = NEW.num_cuenta AND id_empresa = 'Map-Default'
    LIMIT 1;

    -- Si no existe en default mapping, crear nuevo FSA incremental
    IF mapped_fsa IS NULL THEN
      -- Obtener último número usado y generar nuevo código
      SELECT last_number INTO last_fsa_num FROM fsa_increment_tracker;
      SET new_fsa_code = CONCAT('X', LPAD(last_fsa_num, 5, '0'));


      -- Insertar en fsa
      INSERT INTO fsa (id_fsa, `desc`, id_cate)
      VALUES (new_fsa_code, 'no hay descripcion de activo', NULL);

      -- Insertar en default_cta_fsa_mapping
      INSERT INTO default_cta_fsa_mapping (num_cuenta, id_fsa, id_empresa)
      VALUES (NEW.num_cuenta, new_fsa_code, 'Map-Default');

      -- Actualizar el contador
      UPDATE fsa_increment_tracker SET last_number = last_number + 1;

      SET mapped_fsa = new_fsa_code;
    END IF;

    -- Insertar finalmente en cta_fsa_mapping
    INSERT INTO cta_fsa_mapping (id_blce, id_fsa, id_empresa)
    VALUES (NEW.id_blce, mapped_fsa, NEW.id_empresa);
  END IF;
END$$

DELIMITER ;



-- datos

INSERT INTO default_cta_fsa_mapping (num_cuenta, id_fsa, id_empresa) VALUES
('1101010020','11-010','Map-Default'),
('1101010021','11-010','Map-Default'),
('1101010022','11-010','Map-Default'),
('1101010120','11-010','Map-Default'),
('1101010121','11-010','Map-Default'),
('1101010122','11-010','Map-Default'),
('1103000000','11-010','Map-Default'),
('1103000010','11-020','Map-Default'),
('1103000020','11-020','Map-Default'),
('1103000030','11-040','Map-Default'),
('1104000100','11-050','Map-Default'),
('1104000199','11-050','Map-Default'),
('1106000000','11-050','Map-Default'),
('1107000000','12-040','Map-Default'),
('1110000100','11-050','Map-Default'),
('1301000000','22-010','Map-Default'),
('1302500000','22-010','Map-Default'),
('2104000000','21-020','Map-Default'),
('2105000001','21-020','Map-Default'),
('2105001000','21-020','Map-Default'),
('2105001010','21-020','Map-Default'),
('2105003030','21-020','Map-Default'),
('2301000000','23-010','Map-Default'),
('2302000000','23-010','Map-Default'),
('2305100000','23-011','Map-Default'),
('2305400001','23-011','Map-Default'),
('2305500000','23-011','Map-Default'),
('2305700000','23-011','Map-Default'),
('4111000002','23-015','Map-Default'),
('4111000003','23-015','Map-Default'),
('4111000018','31-010','Map-Default'),
('4111000020','31-010','Map-Default'),
('4111000042','35-010','Map-Default'),
('4120000119','35-010','Map-Default'),
('4120000215','31-010','Map-Default'),
('4120000236','37-010','Map-Default'),
('4120000252','31-010','Map-Default'),
('4120000255','31-010','Map-Default'),
('4120000264','31-010','Map-Default'),
('4212000001','31-010','Map-Default'),
('4230000010','31-010','Map-Default'),
('4230000025','31-010','Map-Default'),
('4230000026','31-010','Map-Default'),
('4230000030','31-010','Map-Default'),
('4230000031','31-010','Map-Default'),
('4240000032','31-010','Map-Default');


// 2024
INSERT INTO balance (num_cuenta, nombre, saldo, fecha_procesado, id_user, id_empresa) VALUES
('1101010020','Banco Sant./Stgo. Cuenta Principal',3564608,'2024-07-02',1,'CV19'),
('1101010021','Banco Santander/Stgo. Cuenta Entradas (Dep.)',0,'2024-07-02',1,'CV19'),
('1101010022','Banco Santander/Stgo. Cuenta Salidas (Cheques)',0,'2024-07-02',1,'CV19'),
('1101010120','Banco Sant. Cuenta principal USD',12444335,'2024-07-02',1,'CV19'),
('1101010121','Banco Sant. Cuenta Entrada (Depósitos) USD',0,'2024-07-02',1,'CV19'),
('1101010122','Banco Sant. Cuenta Salidas (Cheques) USD',0,'2024-07-02',1,'CV19'),
('1103000000','Inversiones Fondos Mutuos',57785796,'2024-07-02',1,'CV19'),
('1103000010','Acciones',18973203365,'2024-07-02',1,'CV19'),
('1103000020','Otros Valores Negociables',154131119,'2024-07-02',1,'CV19'),
('1103000030','Cta.Cte.Corredora',0,'2024-07-02',1,'CV19'),
('1104000100','CLIENTES NACIONALES',0,'2024-07-02',1,'CV19'),
('1104000199','Créditos deudores nacional (cuenta regularización)',-6386163,'2024-07-02',1,'CV19'),
('1106000000','DEUDORES VARIOS 1',0,'2024-07-02',1,'CV19'),
('1107000000','DOCUMENTOS Y CUENTAS POR COBRAR',36517714923,'2024-07-02',1,'CV19'),
('1110000100','Anticipo a Proveedores',87250,'2024-07-02',1,'CV19'),
('1301000000','Inversiones en empresas relacionadas',51710372208,'2024-07-02',1,'CV19'),
('1302500000','Inversiones en otras sociedades',313922865,'2024-07-02',1,'CV19'),
('2104000000','Dividendos por pagar',0,'2024-07-02',1,'CV19'),
('2105000001','Doctos y cuentas por pagar Emp. Relacionadas C/P',-8622666946,'2024-07-02',1,'CV19'),
('2105001000','Acreedores nacional',-4734468798,'2024-07-02',1,'CV19'),
('2105001010','OPERACIONES POR PAGAR',-1052028,'2024-07-02',1,'CV19'),
('2105003030','Cta Cte EERR',0,'2024-07-02',1,'CV19'),
('2301000000','Capital social',-2182806458,'2024-07-02',1,'CV19'),
('2302000000','Reserva-capital',-6961898502,'2024-07-02',1,'CV19'),
('2305100000','Revalorización Capital',-3844521863,'2024-07-02',1,'CV19'),
('2305400001','DIVIDENDOS PROVISORIOS',1348227054,'2024-07-02',1,'CV19'),
('2305500000','Resultado Ejercicio (Cta. Remanente)',-89678592254,'2024-07-02',1,'CV19'),
('2305700000','Resultado Acumulado',15835825169,'2024-07-02',1,'CV19'),
('4111000002','Ingresos por servicios',-66735,'2024-07-02',1,'CV19'),
('4111000003','Ingresos ventas acciones',-13014362342,'2024-07-02',1,'CV19'),
('4111000018','INTERESES GANADOS FONDOS MUTUOS',-20387996,'2024-07-02',1,'CV19'),
('4111000020','INTER GANADOS X MORA X RET X PRORROGA',-14102699,'2024-07-02',1,'CV19'),
('4111000042','DIVIDENDOS PERCIBIDOS',-939316211,'2024-07-02',1,'CV19'),
('4120000119','ASESORIAS',7000747,'2024-07-02',1,'CV19'),
('4120000215','Otros Gastos',690200,'2024-07-02',1,'CV19'),
('4120000236','Otros gastos de oficina',393756,'2024-07-02',1,'CV19'),
('4120000252','Gastos Legales',382733,'2024-07-02',1,'CV19'),
('4120000255','Suscripciones',337802,'2024-07-02',1,'CV19'),
('4120000264','Gasto Comision Venta Acciones',1958339,'2024-07-02',1,'CV19'),
('4212000001','Costo de venta',9463110825,'2024-07-02',1,'CV19'),
('4230000010','PATENTES',93847508,'2024-07-02',1,'CV19'),
('4230000025','Gastos por diferencias de tipo de cambio',-503246325,'2024-07-02',1,'CV19'),
('4230000026','Ganancia por diferencias de tipo de cambio',-298129237,'2024-07-02',1,'CV19'),
('4230000030','Gastos de cobro bancarios',1414905,'2024-07-02',1,'CV19'),
('4230000031','Ingreso diferencia tolerada/compens.ctas.mayor',5,'2024-07-02',1,'CV19'),
('4240000032','Reajustes',-3674410955,'2024-07-02',1,'CV19');


//2025
INSERT INTO portaleeff3.balance (num_cuenta, nombre, saldo, fecha_procesado, id_user, id_empresa) VALUES
('1101010020','Banco Sant./Stgo. Cuenta Principal',3564608,'2025-07-02',1,'CV19'),
('1101010021','Banco Santander/Stgo. Cuenta Entradas (Dep.)',0,'2025-07-02',1,'CV19'),
('1101010022','Banco Santander/Stgo. Cuenta Salidas (Cheques)',0,'2025-07-02',1,'CV19'),
('1101010120','Banco Sant. Cuenta principal USD',12444335,'2025-07-02',1,'CV19'),
('1101010121','Banco Sant. Cuenta Entrada (Depósitos) USD',0,'2025-07-02',1,'CV19'),
('1101010122','Banco Sant. Cuenta Salidas (Cheques) USD',0,'2025-07-02',1,'CV19'),
('1103000000','Inversiones Fondos Mutuos',57785796,'2025-07-02',1,'CV19'),
('1103000010','Acciones',18973203365,'2025-07-02',1,'CV19'),
('1103000020','Otros Valores Negociables',154131119,'2025-07-02',1,'CV19'),
('1103000030','Cta.Cte.Corredora',0,'2025-07-02',1,'CV19'),
('1104000100','CLIENTES NACIONALES',0,'2025-07-02',1,'CV19'),
('1104000199','Créditos deudores nacional (cuenta regularización)',-6386163,'2025-07-02',1,'CV19'),
('1106000000','DEUDORES VARIOS 1',0,'2025-07-02',1,'CV19'),
('1107000000','DOCUMENTOS Y CUENTAS POR COBRAR',36517714923,'2025-07-02',1,'CV19'),
('1110000100','Anticipo a Proveedores',87250,'2025-07-02',1,'CV19'),
('1301000000','Inversiones en empresas relacionadas',51710372208,'2025-07-02',1,'CV19'),
('1302500000','Inversiones en otras sociedades',313922865,'2025-07-02',1,'CV19'),
('2104000000','Dividendos por pagar',0,'2025-07-02',1,'CV19'),
('2105000001','Doctos y cuentas por pagar Emp. Relacionadas C/P',-8622666946,'2025-07-02',1,'CV19'),
('2105001000','Acreedores nacional',-4734468798,'2025-07-02',1,'CV19'),
('2105001010','OPERACIONES POR PAGAR',-1052028,'2025-07-02',1,'CV19'),
('2105003030','Cta Cte EERR',0,'2025-07-02',1,'CV19'),
('2301000000','Capital social',-2182806458,'2025-07-02',1,'CV19'),
('2302000000','Reserva-capital',-6961898502,'2025-07-02',1,'CV19'),
('2305100000','Revalorización Capital',-3844521863,'2025-07-02',1,'CV19'),
('2305400001','DIVIDENDOS PROVISORIOS',1348227054,'2025-07-02',1,'CV19'),
('2305500000','Resultado Ejercicio (Cta. Remanente)',-89678592254,'2025-07-02',1,'CV19'),
('2305700000','Resultado Acumulado',15835825169,'2025-07-02',1,'CV19'),
('4111000002','Ingresos por servicios',-66735,'2025-07-02',1,'CV19'),
('4111000003','Ingresos ventas acciones',-13014362342,'2025-07-02',1,'CV19'),
('4111000018','INTERESES GANADOS FONDOS MUTUOS',-20387996,'2025-07-02',1,'CV19'),
('4111000020','INTER GANADOS X MORA X RET X PRORROGA',-14102699,'2025-07-02',1,'CV19'),
('4111000042','DIVIDENDOS PERCIBIDOS',-939316211,'2025-07-02',1,'CV19'),
('4120000119','ASESORIAS',7000747,'2025-07-02',1,'CV19'),
('4120000215','Otros Gastos',690200,'2025-07-02',1,'CV19'),
('4120000236','Otros gastos de oficina',393756,'2025-07-02',1,'CV19'),
('4120000252','Gastos Legales',382733,'2025-07-02',1,'CV19'),
('4120000255','Suscripciones',337802,'2025-07-02',1,'CV19'),
('4120000264','Gasto Comision Venta Acciones',1958339,'2025-07-02',1,'CV19'),
('4212000001','Costo de venta',9463110825,'2025-07-02',1,'CV19'),
('4230000010','PATENTES',93847508,'2025-07-02',1,'CV19'),
('4230000025','Gastos por diferencias de tipo de cambio',-503246325,'2025-07-02',1,'CV19'),
('4230000026','Ganancia por diferencias de tipo de cambio',-298129237,'2025-07-02',1,'CV19'),
('4230000030','Gastos de cobro bancarios',1414905,'2025-07-02',1,'CV19'),
('4230000031','Ingreso diferencia tolerada/compens.ctas.mayor',5,'2025-07-02',1,'CV19'),
('4240000032','Reajustes',-3674410955,'2025-07-02',1,'CV19');


INSERT INTO balance (num_cuenta, nombre, saldo, fecha_procesado, id_user, id_empresa) VALUES
('5101010020','Banco Sant./Stgo. Cuenta Principal',3564608,'2024-07-02',1,'CV19');


INSERT INTO portaleeff3.categoria
(id_cate,
descripcion)
VALUES
(1,"activo corriente"),
(2,	"activo no corriente"),
(3,	"pasivo corriente"),
(4,	"pasivo no corriente"),
(5,	"patrimonio"),
(6,	"ganancia");

CREATE TABLE fsa_increment_tracker (
    last_number INT NOT NULL DEFAULT 0
);
INSERT INTO fsa_increment_tracker (last_number) VALUES (1);


insert into empresa (id_empresa, descripcion) values
	("CV19","Inversiones Nevada S.A" );


.\sonar-scanner-7.1.0.4889-windows-x64\bin\sonar-scanner.bat -D"sonar.projectKey=Portal-Ti2" -D"sonar.sources=." -D"sonar.host.url=http://192.168.170.186:9000" -D"sonar.token=sqp_e6852b874e699469e120bb762fc66fcbea2a7b84" -D"sonar.scm.disabled=true" -D"sonar.ws.timeout=300"




